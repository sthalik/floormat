name: tag

on:
  push:
    branches: [ wip ]
    #tags:
    #- '*'

env:
  BUILD_TYPE: RELEASE

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
        - os: ubuntu-latest
          cmake: /usr/bin/env CC=gcc-14 CXX=g++-14 cmake
        - os: windows-latest
          cmake: .\.github\workflows\build-windows.bat cmake
        - os: macos-latest
          cmake: /usr/bin/env CC="$(brew --prefix llvm)/bin/clang" CXX="$(brew --prefix llvm)/bin/clang++" cmake

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - uses: abdes/gha-setup-ninja@master
      with:
        version: 1.11.1
      if: matrix.os != 'ubuntu-latest'

    - name: Install Linux dependencies
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt -q=2 update
        sudo apt install g++-14 gdb ninja-build libbenchmark-dev
        sudo apt -q install libgl1-mesa-dri libgl-dev libglx-dev xorg-dev xvfb libopencv-dev
        sudo apt -q install libsdl2-dev
      if: matrix.os == 'ubuntu-latest'

    - name: Install OSX dependencies
      run: |
        brew install SDL2 llvm lld
      if: matrix.os == 'macos-latest'

    - name: Configure
      run: ${{matrix.cmake}} -G "Ninja" -S ${{github.workspace}}/ -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: ${{matrix.cmake}} --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target install

    - name: Test
      run: |
        cd ${{github.workspace}}/build/install
        export MAGNUM_LOG=default
        export LD_LIBRARY_PATH="$PWD/lib" ASAN_OPTIONS="detect_leaks=0:abort_on_error=1"
        set -e
        xvfb-run gdb -q -batch -x ../../.github/gdbscript.py --args bin/floormat-test
        xvfb-run gdb -q -batch -x ../../.github/gdbscript.py --args bin/floormat-benchmark
      if: matrix.os == 'ubuntu-latest'

#    - name: Upload build
#      uses: actions/upload-artifact@v2.2.4
#      with:
#        name: buildoutput
#        path: ${{github.workspace}}/build/
